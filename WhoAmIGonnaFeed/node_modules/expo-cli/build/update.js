'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator;

function _load_regenerator() {
  return _regenerator = _interopRequireDefault(require('babel-runtime/regenerator'));
}

var _asyncToGenerator2;

function _load_asyncToGenerator() {
  return _asyncToGenerator2 = _interopRequireDefault(require('babel-runtime/helpers/asyncToGenerator'));
}

var checkForUpdateAsync = function () {
  var _ref2 = (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee2() {
    var current, _ref3, latestVersion;

    return (_regenerator || _load_regenerator()).default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            current = (_package || _load_package()).default.version;

            // check for an outdated install based on either a fresh npm query or our cache

            _context2.next = 3;
            return UpdateCacher.getAsync();

          case 3:
            _ref3 = _context2.sent;
            latestVersion = _ref3.latestVersion;
            return _context2.abrupt('return', {
              updateIsAvailable: (_semver || _load_semver()).default.gt(latestVersion, current),
              latest: latestVersion,
              current: current
            });

          case 6:
          case 'end':
            return _context2.stop();
        }
      }
    }, _callee2, this);
  }));

  return function checkForUpdateAsync() {
    return _ref2.apply(this, arguments);
  };
}();

var _latestVersion;

function _load_latestVersion() {
  return _latestVersion = _interopRequireDefault(require('latest-version'));
}

var _pTimeout;

function _load_pTimeout() {
  return _pTimeout = _interopRequireDefault(require('p-timeout'));
}

var _semver;

function _load_semver() {
  return _semver = _interopRequireDefault(require('semver'));
}

var _xdl;

function _load_xdl() {
  return _xdl = require('xdl');
}

var _package;

function _load_package() {
  return _package = _interopRequireDefault(require('../package.json'));
}

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var UpdateCacher = new (_xdl || _load_xdl()).FsCache.Cacher((0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee() {
  return (_regenerator || _load_regenerator()).default.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return (0, (_pTimeout || _load_pTimeout()).default)((0, (_latestVersion || _load_latestVersion()).default)((_package || _load_package()).default.name), 2000);

        case 2:
          _context.t0 = _context.sent;
          return _context.abrupt('return', {
            latestVersion: _context.t0
          });

        case 4:
        case 'end':
          return _context.stop();
      }
    }
  }, _callee, undefined);
})), (_package || _load_package()).default.name + '-updates.json', 24 * 60 * 60 * 1000 // one day
);
exports.default = {
  checkForUpdateAsync: checkForUpdateAsync
};
module.exports = exports['default'];
//# sourceMappingURL=__sourcemaps__/update.js.map
