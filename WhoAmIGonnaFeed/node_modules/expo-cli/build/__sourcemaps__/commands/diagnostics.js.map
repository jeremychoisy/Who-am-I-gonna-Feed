{"version":3,"sources":["commands/diagnostics.js"],"names":["options","run","System","Binaries","IDEs","npmPackages","npmGlobalPackages","title","info","console","log","start","getDeviceInfoAsync","uploadLogs","url","stop","raw","action","program","command","description","asyncAction"],"mappings":";;;;;;;;;;;;;;;;;;;4IASA,iBAAsBA,OAAtB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACE,+CAAI,kCAAJ;AACA,+CAAI,sDAAJ;;AAFF;AAAA,mBAImB,sCAAQC,GAAR,CACf;AACEC,sBAAQ,CAAC,IAAD,EAAO,OAAP,CADV;AAEEC,wBAAU,CAAC,MAAD,EAAS,MAAT,EAAiB,KAAjB,EAAwB,UAAxB,CAFZ;AAGEC,oBAAM,CAAC,OAAD,EAAU,gBAAV,CAHR;AAIEC,2BAAa,CAAC,MAAD,EAAS,OAAT,EAAkB,cAAlB,EAAkC,kBAAlC,CAJf;AAKEC,iCAAmB,CAAC,UAAD;AALrB,aADe,EAQf;AACEC;AADF,aARe,CAJnB;;AAAA;AAIMC,gBAJN;;AAgBEC,oBAAQC,GAAR,CAAYF,IAAZ;;AAEAC,oBAAQC,GAAR,CAAY,uBAAZ;AACA,8DAAcC,KAAd;AAnBF;AAAA,mBAoBwB,kCAAYC,kBAAZ,CAA+B;AACnDC,0BAAY;AADuC,aAA/B,CApBxB;;AAAA;AAAA;AAoBUC,eApBV,SAoBUA,GApBV;;AAuBE,8DAAcC,IAAd;AACAN,oBAAQC,GAAR,UAAmBI,GAAnB;AACA,0CAAIE,GAAJ,CAAQF,GAAR;;AAzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeG,M;;;;;;;AATf;AAAA;AAAA;;;;AACA;AAAA;AAAA;;;;AACA;AAAA;AAAA;;;;AACA;AAAA;AAAA;;;;AAEA;AAAA;AAAA;;;;AAEA;AAAA;AAAA;;;;kBA8Be,mBAAW;AACxBC,UACGC,OADH,CACW,2BADX,EAEGC,WAFH,CAEe,gFAFf,EAGGC,WAHH,CAGeJ,MAHf;AAID,C","file":"../../commands/diagnostics.js","sourcesContent":["import { Diagnostics } from 'xdl';\nimport envinfo from 'envinfo';\nimport chalk from 'chalk';\nimport { version } from '../../package.json';\n\nimport simpleSpinner from '@expo/simple-spinner';\n\nimport log from '../log';\n\nasync function action(options) {\n  log('Generating diagnostics report...');\n  log('You can join our slack here: https://slack.expo.io/.');\n\n  let info = await envinfo.run(\n    {\n      System: ['OS', 'Shell'],\n      Binaries: ['Node', 'Yarn', 'npm', 'Watchman'],\n      IDEs: ['Xcode', 'Android Studio'],\n      npmPackages: ['expo', 'react', 'react-native', 'react-navigation'],\n      npmGlobalPackages: ['expo-cli'],\n    },\n    {\n      title: `Expo CLI ${version} environment info`,\n    }\n  );\n  console.log(info);\n\n  console.log('  Diagnostics report:');\n  simpleSpinner.start();\n  const { url } = await Diagnostics.getDeviceInfoAsync({\n    uploadLogs: true,\n  });\n  simpleSpinner.stop();\n  console.log(`    ${url}\\n`);\n  log.raw(url);\n}\n\nexport default program => {\n  program\n    .command('diagnostics [project-dir]')\n    .description('Uploads diagnostics information and returns a url to share with the Expo team.')\n    .asyncAction(action);\n};\n"],"sourceRoot":"/expo-cli@2.3.3/src"}