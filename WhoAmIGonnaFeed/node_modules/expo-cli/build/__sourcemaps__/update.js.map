{"version":3,"sources":["update.js"],"names":["current","version","UpdateCacher","getAsync","latestVersion","updateIsAvailable","gt","latest","checkForUpdateAsync","Cacher","name"],"mappings":";;;;;;;;;;;;;;;;;;;6IAkBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKQA,mBALR,GAKkB,sCAAYC,OAL9B;;AAOE;;AAPF;AAAA,mBAQkCC,aAAaC,QAAb,EARlC;;AAAA;AAAA;AAQUC,yBARV,SAQUA,aARV;AAAA,8CAUS;AACLC,iCAAmB,oCAAOC,EAAP,CAAUF,aAAV,EAAyBJ,OAAzB,CADd;AAELO,sBAAQH,aAFH;AAGLJ;AAHK,aAVT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeQ,mB;;;;;;;AAff;AAAA;AAAA;;;;AACA;AAAA;AAAA;;;;AACA;AAAA;AAAA;;;;AAEA;AAAA;AAAA;;;;AACA;AAAA;AAAA;;;;AAEA,IAAMN,eAAe,IAAI,8BAAQO,MAAZ,gIACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACgC,6CAAS,uDAAmB,sCAAYC,IAA/B,CAAT,EAA+C,IAA/C,CADhC;;AAAA;AAAA;AAAA;AACWN,yBADX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CADmB,IAIhB,sCAAYM,IAJI,oBAKnB,KAAK,EAAL,GAAU,EAAV,GAAe,IALI,CAKC;AALD,CAArB;kBAyBe;AACbF;AADa,C","file":"../update.js","sourcesContent":["/**\n * @flow\n */\nimport latestVersionAsync from 'latest-version';\nimport pTimeout from 'p-timeout';\nimport semver from 'semver';\n\nimport { FsCache } from 'xdl';\nimport packageJSON from '../package.json';\n\nconst UpdateCacher = new FsCache.Cacher(\n  async () => {\n    return { latestVersion: await pTimeout(latestVersionAsync(packageJSON.name), 2000) };\n  },\n  `${packageJSON.name}-updates.json`,\n  24 * 60 * 60 * 1000 // one day\n);\n\nasync function checkForUpdateAsync(): Promise<{\n  updateIsAvailable: boolean,\n  current: string,\n  latest: string,\n}> {\n  const current = packageJSON.version;\n\n  // check for an outdated install based on either a fresh npm query or our cache\n  const { latestVersion } = await UpdateCacher.getAsync();\n\n  return {\n    updateIsAvailable: semver.gt(latestVersion, current),\n    latest: latestVersion,\n    current,\n  };\n}\n\nexport default {\n  checkForUpdateAsync,\n};\n"],"sourceRoot":"/expo-cli@2.3.3/src"}